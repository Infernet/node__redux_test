{"version":3,"sources":["serviceWorker.js","views/components/Authenticated/InputLogin.jsx","views/components/Authenticated/InputPassword.jsx","constants/authorization.js","views/components/NavBar/NavBarLink.jsx","views/components/NavBar/NavBar.jsx","views/components/Header/Header.jsx","views/components/Footer/Footer.jsx","containers/Authorization.jsx","actions/authorizationActions.js","views/components/Home/ContentCart.jsx","containers/Home.jsx","containers/Authenticated.jsx","routes/index.jsx","containers/App.jsx","reducers/authorizationReducer.js","reducers/rootReducer.js","store/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","InputLogin","props","onChange","bind","e","this","setValue","target","value","className","class","htmlFor","type","id","name","placeholder","login","React","Component","InputPassword","password","CHANGE_LOGIN","CHANGE_PASSWORD","SIGN_IN_SUCCESS","SIGN_IN_REQUEST","SIGN_IN_FAILED","SIGN_OUT","SIGN_IN_WITH_TOKEN_REQUEST","SIGN_IN_WITH_TOKEN_SUCCESS","SIGN_IN_WITH_TOKEN_FAILED","NavBarLink","exact","activeClassName","to","link","NavBar","Header","src","alt","Footer","Authorization","handleSubmit","preventDefault","signIn","setLogin","setPassword","isFetching","message","onSubmit","propsTypes","PropTypes","bool","isRequired","string","func","connect","store","console","log","authorization","dispatch","payload","changeLogin","changePassword","data","axios","post","then","response","status","Error","localStorage","setItem","token","catch","reason","toString","ContentCart","container","title","content","Home","classNames","Object","keys","map","key","Authenticated","onClick","signOut","removeItem","Routes","path","component","from","App","getItem","bearerToken","object","headers","signInWithToken","initialState","firstName","lastName","email","rootReducer","combineReducers","state","action","assign","JSON","parse","atob","split","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95ec3de8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass InputLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        this.props.setValue(e.target.value);\n    }\n\n    render() {\n        return (\n            <div className={'block'+this.props.class}>\n                <label htmlFor=\"login\" className={'label'+this.props.class}>Login</label>\n                <input type=\"text\"\n                       id={\"login\"}\n                       name={\"login\"}\n                       className={'input'+this.props.class}\n                       onChange={this.onChange}\n                       placeholder={this.props.login}\n                />\n            </div>\n        );\n    }\n\n}\n\nInputLogin.propTypes = {\n    login: PropTypes.string,\n    class: PropTypes.string.isRequired\n};\n\nexport default InputLogin;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass InputPassword extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        this.props.setValue(e.target.value);\n    }\n\n    render() {\n        return (\n            <div className={'block'+this.props.class}>\n                <label htmlFor=\"password\" className={'label'+this.props.class}>Password</label>\n                <input type=\"password\"\n                       id={\"password\"}\n                       name={\"password\"}\n                       className={'input'+this.props.class}\n                       onChange={this.onChange}\n                       placeholder={this.props.password}\n                />\n            </div>\n        );\n    }\n\n}\n\nInputPassword.propTypes = {\n    password: PropTypes.string,\n    class:PropTypes.string.isRequired\n};\n\nexport default InputPassword;","export const CHECK_TOKEN=\"CHECK_TOKEN\";\nexport const CHANGE_LOGIN = \"CHANGE_LOGIN\";\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\";\nexport const SIGN_IN_REQUEST = \"SIGN_IN_REQUEST\";\nexport const SIGN_IN_FAILED = \"SIGN_IN_FAILED\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const SIGN_IN_WITH_TOKEN_REQUEST=\"SIGN_IN_WITH_TOKEN_REQUEST\";\nexport const SIGN_IN_WITH_TOKEN_SUCCESS=\"SIGN_IN_WITH_TOKEN_SUCCESS\";\nexport const SIGN_IN_WITH_TOKEN_FAILED=\"SIGN_IN_WITH_TOKEN_FAILED\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nclass NavBarLink extends React.Component {\n\n\n    render() {\n        return (\n            <NavLink\n                exact={this.props.exact}\n                className={\"nav__link\"}\n                activeClassName={\"nav__link__active\"}\n                to={this.props.link}\n            >\n                {this.props.name}\n            </NavLink>\n        );\n    }\n}\n\n\nexport default NavBarLink;","import React from 'react';\nimport NavBarLink from \"./NavBarLink\";\n\nclass NavBar extends React.Component{\n\n    render() {\n        return(\n            <nav className={'nav-bar'}>\n                <div className={'nav-bar__container'}>\n                <NavBarLink exact={true} link={\"/\"} name={\"Home page\"}/>\n                <NavBarLink link={\"/login\"} name={\"Login\"}/>\n                <NavBarLink link={\"/authenticated\"} name={\"Authenticated\"}/>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default NavBar;","import React from 'react';\n\nclass Header extends React.Component{\n    render() {\n        return(\n            <div className={'header'}>\n                <img src=\"/react-gif.gif\" alt=\"\"/>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component{\n    render() {\n        return(\n            <footer className={'footer'}>\n                <div className=\"footer--logo\">\n                    <img src=\"/logo192.png\" alt=\"\"/>\n                </div>\n                <div className=\"footer--content\">\n                    <p>&#169; design by Infernet</p>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport InputLogin from \"../views/components/Authenticated/InputLogin\";\nimport InputPassword from \"../views/components/Authenticated/InputPassword\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {changeLogin, changePassword, signIn} from \"../actions/authorizationActions\";\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport Header from \"../views/components/Header/Header\";\nimport Footer from \"../views/components/Footer/Footer\";\n\nclass Authorization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.signIn({\n            login: this.props.login,\n            password: this.props.password\n        });\n\n    }\n\n    render() {\n        const {setLogin, setPassword, login, password, isFetching, message} = this.props;\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                <div className=\"authorization-body\">\n                    <div className=\"authorization__title\">\n                        <h3>Login Page</h3>\n                    </div>\n                    <div className=\"authorization__content\">\n                        <form className={'authorization__content--form'} onSubmit={this.handleSubmit}>\n\n                            <InputLogin login={login} setValue={setLogin} class={'Login'}/>\n                            <InputPassword password={password} class={'Password'} setValue={setPassword}/>\n                            <button type=\"submit\">sign in</button>\n                        </form>\n                        <div className=\"authorization__content--status\">\n                            <p>Login: {login}</p>\n                            <p>Password: {password}</p>\n                            {\n                                (isFetching) ? <p>Отправка на Node.js...</p> :\n                                    <p>{message}</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\n\nAuthorization.propsTypes = {\n    isFetching: PropTypes.bool.isRequired,\n    message: PropTypes.string,\n    login: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    setLogin: PropTypes.func.isRequired,\n    setPassword: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => {\n    console.log(store);\n    return {\n        login: store.authorization.login,\n        password: store.authorization.password,\n        isFetching: store.authorization.isFetching,\n        message: store.authorization.message\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLogin: login => dispatch(changeLogin(login)),\n        setPassword: password => dispatch(changePassword(password)),\n        signIn: data => dispatch(signIn(data))\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorization);\n","import {\n    CHANGE_LOGIN,\n    CHANGE_PASSWORD, CHECK_TOKEN,\n    SIGN_IN_FAILED,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS, SIGN_IN_WITH_TOKEN_FAILED, SIGN_IN_WITH_TOKEN_REQUEST, SIGN_IN_WITH_TOKEN_SUCCESS, SIGN_OUT\n} from \"../constants/authorization\";\nimport axios from \"axios\";\n\nexport function changeLogin(login) {\n    return {\n        type: CHANGE_LOGIN,\n        payload: login\n    }\n}\n\nexport function changePassword(password) {\n    return {\n        type: CHANGE_PASSWORD,\n        payload: password\n    }\n}\n\nexport function signIn(data) {\n    return dispatch => {\n        dispatch({\n            type: SIGN_IN_REQUEST,\n            payload: data\n        });\n        // setTimeout(()=>{\n        //     let min=1;\n        //     let max=1000000;\n        //     let token=Math.floor(Math.random() * (max - min + 1)) + min;\n        //     localStorage.setItem('token',token);\n        //     dispatch({\n        //         type:SIGN_IN_SUCCESS,\n        //         payload:{\n        //             message:\"Успешная отправка\",\n        //             token:token+''\n        //         }\n        //     })\n        // },5000);\n        axios.post('/request/login', {\n                login: data.login,\n                password: data.password\n            }\n        )\n            .then(response => {\n                if (response.status !== 400) {\n                    localStorage.setItem('token', response.data.token);\n                    dispatch({\n                        type: SIGN_IN_SUCCESS,\n                        payload: {\n                            message: \"Успешная отправка\",\n                            token: response.data.token\n                        }\n                    })\n                } else\n                    throw new Error();\n            })\n            .catch(reason => {\n                dispatch({\n                    type: SIGN_IN_FAILED,\n                    payload: {\n                        message: reason.toString()\n                    }\n                })\n            })\n    }\n}\nexport function signInWithToken(token) {\n    return dispatch => {\n        dispatch({\n            type: SIGN_IN_WITH_TOKEN_REQUEST\n        });\n\n        axios.post('/request/token', {},{\n                headers:{\n                    'Authorization': 'Bearer ' + token\n                }\n            }\n        )\n            .then(response => {\n                if (response.status !== 400) {\n                    dispatch({\n                        type: SIGN_IN_WITH_TOKEN_SUCCESS,\n                        payload: {\n                            message: \"Успешная отправка\",\n                            login: response.data.login,\n                            token:token\n                        }\n                    })\n                } else\n                    throw new Error();\n            })\n            .catch(reason => {\n                localStorage.removeItem('token');\n                dispatch({\n                    type: SIGN_IN_WITH_TOKEN_FAILED,\n                    payload: {\n                        message: 'Невалидный или отсутствующий токен'\n                    }\n                })\n            })\n    }\n}\n\n\nexport function signOut() {\n    localStorage.removeItem('token');\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport function restoreToken() {\n    let token = localStorage.getItem('token');\n    return {\n        type: CHECK_TOKEN,\n        payload: (token !==null ? token : null)\n    }\n}","import React from 'react';\n\nclass ContentCart extends React.Component {\n\n\n    render() {\n        return (\n            <div className={this.props.class.container}>\n                <p className={this.props.class.title}>{this.props.title}</p>\n                <p className={this.props.class.content}>{this.props.content}</p>\n            </div>\n        );\n    }\n}\n\nexport default ContentCart;","import React from 'react';\nimport {connect} from 'react-redux';\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport ContentCart from \"../views/components/Home/ContentCart\";\nimport Footer from \"../views/components/Footer/Footer\";\nimport Header from \"../views/components/Header/Header\";\n\n\nclass Home extends React.Component {\n    render() {\n        const {store} = this.props;\n        let classNames = {\n            container: \"home__content--container\",\n            title: \"home__content--title\",\n            content: \"home__content--content\"\n        };\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                <div className={'home-body'}>\n                    <div className={'home__title'}>\n                        <h3>Home page</h3>\n                    </div>\n                    <div className={'home__content'}>\n                        {\n                            (store.authorization.token !== null) ?\n                                Object.keys(store.authorization).map(e => {\n                                    if (e !== 'token' && store.authorization[e]!=='')\n                                        return <ContentCart\n                                            key={e}\n                                            class={classNames}\n                                            title={e + ':'}\n                                            content={store.authorization[e]}\n                                        />;\n                                })\n                                :\n                                <ContentCart\n                                    class={classNames}\n                                    title={'Ошибка:'}\n                                    content={'Вы не авторизованы'}\n                                />\n                        }\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        store: store\n    }\n};\nexport default connect(mapStateToProps)(Home);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {signOut} from \"../actions/authorizationActions\";\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport Header from \"../views/components/Header/Header\";\nimport Footer from \"../views/components/Footer/Footer\";\n\n\nclass Authenticated extends React.Component {\n\n    render() {\n        const {store} = this.props;\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                <div className=\"authenticated-body\">\n                    <div className=\"authenticated--title\">\n                        <h3>Authenticated page</h3>\n                    </div>\n                    <ul className={\"authenticated--content\"}>\n                        {\n                            Object.keys(store.authorization).map(e => {\n                                if (e !== 'token')\n                                    return <li key={e}>{e}: {store.authorization[e]}</li>;\n                            })\n                        }\n                    </ul>\n                    <button className={\"authenticated--button\"} onClick={this.props.signOut}>Log out</button>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        store: store\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authenticated);\n","import {Redirect, Route, Switch} from 'react-router-dom';\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport Authorization from \"../containers/Authorization\";\nimport Home from \"../containers/Home\";\nimport Authenticated from \"../containers/Authenticated\";\nimport PropTypes from 'prop-types';\n\n\nclass Routes extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/\"} exact component={Home}/>\n                {\n                    (this.props.store.token!==null)?\n                    <Redirect from={\"/login\"} to={\"/authenticated\"}/>:\n                    <Redirect from={\"/authenticated\"} to={\"/login\"}/>\n                }\n                <Route path={\"/login\"} component={Authorization}/>\n                <Route path={\"/authenticated\"} component={Authenticated}/>\n            </Switch>\n        );\n    }\n}\nRoutes.propTypes={\n    store:PropTypes.object.isRequired\n};\n\nconst mapStateToProps = store => {\n    return {\n        store: store.authorization\n    }\n};\n\nexport default connect(mapStateToProps)(Routes);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Routes from \"../routes\";\nimport PropTypes from \"prop-types\";\nimport {signInWithToken} from \"../actions/authorizationActions\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        if(localStorage.getItem('token')!==null && this.props.store.authorization.token ===null)\n            this.props.bearerToken(localStorage.getItem('token'));\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Routes/>\n            </BrowserRouter>\n        );\n    }\n}\n\nApp.propsTypes = {\n    store: PropTypes.object.isRequired\n};\nconst mapStateToProps = store => {\n    return {\n        store: store\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        bearerToken:token=>dispatch(signInWithToken(token))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n    CHANGE_LOGIN,\n    CHANGE_PASSWORD,\n    SIGN_IN_FAILED,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS, SIGN_IN_WITH_TOKEN_FAILED, SIGN_IN_WITH_TOKEN_REQUEST, SIGN_IN_WITH_TOKEN_SUCCESS, SIGN_OUT\n} from \"../constants/authorization\";\n\nconst initialState = {\n    id:null,\n    login: \"\",\n    password: \"\",\n    firstName:\"\",\n    lastName:\"\",\n    email:\"\",\n    isFetching: false,\n    token: null,\n    message: \"\"\n};\n\nexport function authorizationReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_LOGIN:\n            return Object.assign({}, state, {login: action.payload});\n        case CHANGE_PASSWORD:\n            return Object.assign({}, state, {password: action.payload});\n        case SIGN_IN_REQUEST:\n            return Object.assign({},\n                state,\n                {\n                    login: action.payload.login,\n                    password: action.payload.password,\n                    isFetching: false,\n                    message: 'Отправка на Node...'\n                });\n        case SIGN_IN_SUCCESS:\n            return Object.assign({}, state,\n                {message: action.payload.message, isFetching: false, token: action.payload.token});\n        case SIGN_IN_FAILED:\n            return Object.assign({}, state,\n                {message: action.payload.message, isFetching: false});\n        case SIGN_OUT:\n            return Object.assign({}, initialState);\n        case SIGN_IN_WITH_TOKEN_REQUEST:\n            return Object.assign({}, state, {\n                isFetching: false,\n                message: 'Отправка на Node...'\n            });\n        case SIGN_IN_WITH_TOKEN_SUCCESS:\n            let data=JSON.parse( atob(action.payload.token.split('.')[1]));\n            return Object.assign({}, state, {\n                id:data.id,\n                message: action.payload.message,\n                isFetching: false,\n                login: action.payload.login,\n                password:data.password,\n                firstName:data.firstName,\n                lastName:((data.lastName!==null)?data.lastName:\"\"),\n                email:data.email,\n                token: action.payload.token\n            });\n        case SIGN_IN_WITH_TOKEN_FAILED:\n            return Object.assign({}, state,\n                {message: action.payload.message, isFetching: false});\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {authorizationReducer} from \"./authorizationReducer\";\n\n\n\nexport const rootReducer = combineReducers({\n    authorization: authorizationReducer\n});\n","import {createStore, applyMiddleware} from 'redux'\nimport {rootReducer} from \"../reducers/rootReducer\";\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./containers/App\";\nimport {store} from \"./store/configureStore\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}