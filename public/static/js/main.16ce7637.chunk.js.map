{"version":3,"sources":["serviceWorker.js","views/components/Authenticated/InputLogin.jsx","views/components/Authenticated/InputPassword.jsx","constants/authorization.js","constants/token.js","actions/authorizationActions.js","views/components/NavBar/NavBarLink.jsx","views/components/NavBar/NavBar.jsx","views/components/Header/Header.jsx","views/components/Footer/Footer.jsx","containers/Authorization.jsx","views/components/Home/ContentCart.jsx","containers/Home.jsx","containers/Authenticated.jsx","views/components/Users/ControlPanel.jsx","constants/users.js","reducers/authorizationReducer.js","reducers/usersReducer.js","reducers/rootReducer.js","store/configureStore.js","middlewares/accessTokenMiddleware.js","views/components/Users/User.jsx","containers/UsersList.jsx","actions/usersActions.js","routes/index.jsx","containers/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","InputLogin","props","onChange","bind","e","this","setValue","target","value","className","class","htmlFor","type","id","name","placeholder","login","React","Component","InputPassword","password","CHANGE_LOGIN","CHANGE_PASSWORD","SIGN_IN_SUCCESS","SIGN_IN_REQUEST","SIGN_IN_FAILED","SIGN_OUT","RESTORE_TOKEN","AUTH_WITH_TOKEN_REQUEST","AUTH_WITH_TOKEN_SUCCESS","AUTH_WITH_TOKEN_FAILED","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","signInWithToken","accessToken","dispatch","axios","post","headers","then","response","status","Error","payload","Object","assign","message","data","user","catch","reason","localStorage","removeItem","accessExpiresIn","NavBarLink","exact","activeClassName","to","link","NavBar","Header","src","alt","Footer","Authorization","handleSubmit","preventDefault","signIn","setLogin","setPassword","isFetching","onSubmit","propsTypes","PropTypes","bool","isRequired","string","func","connect","store","console","log","authorization","changeLogin","changePassword","setItem","refreshToken","ContentCart","container","title","content","Home","classNames","token","keys","map","key","Authenticated","check","interval","setInterval","time","Date","getTime","tokenTime","alert","toLocaleTimeString","clearInterval","onClick","signOut","ControlPanel","onInsertUser","onUpdateUser","onDeleteUser","object","insertUser","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILED","CHANGE_USER","INSERT_USER_REQUEST","INSERT_USER_SUCCESS","INSERT_USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAILED","initialState","selectedId","users","rootReducer","combineReducers","state","action","createStore","applyMiddleware","next","getState","Math","floor","refreshAccessToken","thunk","logger","User","onSelect","select","UsersList","getUsers","length","selectUser","style","height","width","changeUser","Routes","path","component","from","UserList","App","bearerToken","restoreToken","getItem","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16ce7637.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass InputLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        this.props.setValue(e.target.value);\n    }\n\n    render() {\n        return (\n            <div className={'block'+this.props.class}>\n                <label htmlFor=\"login\" className={'label'+this.props.class}>Login</label>\n                <input type=\"text\"\n                       id={\"login\"}\n                       name={\"login\"}\n                       className={'input'+this.props.class}\n                       onChange={this.onChange}\n                       placeholder={this.props.login}\n                />\n            </div>\n        );\n    }\n\n}\n\nInputLogin.propTypes = {\n    login: PropTypes.string,\n    class: PropTypes.string.isRequired\n};\n\nexport default InputLogin;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass InputPassword extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        this.props.setValue(e.target.value);\n    }\n\n    render() {\n        return (\n            <div className={'block'+this.props.class}>\n                <label htmlFor=\"password\" className={'label'+this.props.class}>Password</label>\n                <input type=\"password\"\n                       id={\"password\"}\n                       name={\"password\"}\n                       className={'input'+this.props.class}\n                       onChange={this.onChange}\n                       placeholder={this.props.password}\n                />\n            </div>\n        );\n    }\n\n}\n\nInputPassword.propTypes = {\n    password: PropTypes.string,\n    class:PropTypes.string.isRequired\n};\n\nexport default InputPassword;","export const CHANGE_LOGIN = \"CHANGE_LOGIN\";\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\";\nexport const SIGN_IN_REQUEST = \"SIGN_IN_REQUEST\";\nexport const SIGN_IN_FAILED = \"SIGN_IN_FAILED\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const TEST=\"TEST\";","//restore token\nexport const RESTORE_TOKEN = \"RESTORE_TOKEN\";\n//auth with access token\nexport const AUTH_WITH_TOKEN_REQUEST = \"AUTH_WITH_TOKEN_REQUEST\";\nexport const AUTH_WITH_TOKEN_SUCCESS = \"AUTH_WITH_TOKEN_SUCCESS\";\nexport const AUTH_WITH_TOKEN_FAILED = \"AUTH_WITH_TOKEN_FAILED\";\n//try to get Access Token\nexport const REFRESH_TOKEN_REQUEST = \"REFRESH_TOKEN_REQUEST\";\nexport const REFRESH_TOKEN_SUCCESS = \"REFRESH_TOKEN_SUCCESS\";\nexport const REFRESH_TOKEN_FAILED = \"REFRESH_TOKEN_FAILED\";","import {\n    CHANGE_LOGIN,\n    CHANGE_PASSWORD,\n    SIGN_IN_FAILED,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_OUT, TEST\n} from \"../constants/authorization\";\nimport {\n    AUTH_WITH_TOKEN_REQUEST,\n    AUTH_WITH_TOKEN_SUCCESS,\n    AUTH_WITH_TOKEN_FAILED,\n    REFRESH_TOKEN_REQUEST,\n    REFRESH_TOKEN_SUCCESS,\n    REFRESH_TOKEN_FAILED,\n    RESTORE_TOKEN, REFRESH_TOKEN_NO_NEED\n} from \"../constants/token\";\nimport axios from \"axios\";\n\nexport function changeLogin(login) {\n    return {\n        type: CHANGE_LOGIN,\n        payload: login\n    }\n}\n\nexport function changePassword(password) {\n    return {\n        type: CHANGE_PASSWORD,\n        payload: password\n    }\n}\n\nexport function signIn(data) {\n    return dispatch => {\n        dispatch({\n            type: SIGN_IN_REQUEST\n        });\n        axios.post('/request/login/login-auth', {\n                login: data.login,\n                password: data.password\n            }\n        )\n            .then(response => {\n                if (response.status !== 400) {\n                    localStorage.setItem('accessToken', response.data.accessToken);\n                    localStorage.setItem('refreshToken', response.data.refreshToken);\n                    dispatch({\n                        type: SIGN_IN_SUCCESS,\n                        payload: {\n                            message: \"Welcome, \" + response.data.login,\n                            accessToken: response.data.accessToken,\n                            refreshToken: response.data.refreshToken,\n                            accessExpiresIn: response.data.accessExpiresIn\n                        }\n                    });\n                } else\n                    throw new Error();\n            })\n            .catch(reason => dispatch({\n                type: SIGN_IN_FAILED,\n                payload: {message: \"Error: uncorrected login or password\"}\n            }));\n    }\n}\n\nexport function signOut() {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    return {\n        type: SIGN_OUT,\n        login: \"\",\n        password: \"\",\n        accessToken: null,\n        refreshToken: null,\n        accessExpiresIn: 0\n    }\n}\n\nexport function signInWithToken(accessToken) {\n    return dispatch => {\n        dispatch({\n            type: AUTH_WITH_TOKEN_REQUEST\n        });\n        axios.post('/request/login/token-auth', {}, {headers: {'authorization': 'Bearer ' + accessToken}})\n            .then(response => {\n                if (response.status === 200) {\n                    dispatch({\n                        type: AUTH_WITH_TOKEN_SUCCESS,\n                        payload: Object.assign({message: `Welcome, ${response.data.user.login}`}, response.data.user)\n                    });\n                } else {\n                    throw new Error();\n                }\n            })\n            .catch(reason => {\n                localStorage.removeItem('accessToken');\n                dispatch({\n                    type: AUTH_WITH_TOKEN_FAILED,\n                    payload: {\n                        accessToken: null,\n                        accessExpiresIn: 0,\n                        message: 'Невалидный или отсутствующий токен'\n                    }\n                })\n            })\n    }\n}\n\nexport function refreshAccessToken(refreshToken,next,action) {\n    return dispatch => {\n        dispatch({\n            type: REFRESH_TOKEN_REQUEST\n        });\n            axios.post('/request/login/refresh-token', {},\n                {headers: {'refresh': 'Bearer ' + refreshToken}})\n                .then(response => {\n                    if (response.status === 200) {\n                        localStorage.setItem('accessToken', response.data.accessToken);\n                        localStorage.setItem('refreshToken', response.data.refreshToken);\n                        dispatch({\n                            type: REFRESH_TOKEN_SUCCESS,\n                            payload: response.data\n                        });\n                        next(action);\n                    } else {\n                        throw  new Error();\n                    }\n                })\n                .catch(reason => {\n                    localStorage.removeItem('accessToken');\n                    localStorage.removeItem('refreshToken');\n                    dispatch({\n                        type: REFRESH_TOKEN_FAILED\n                    });\n                });\n    }\n}\n\n\nexport function restoreToken() {\n    let accessToken = localStorage.getItem('accessToken');\n    let refreshToken = localStorage.getItem('refreshToken');\n    return {\n        type: RESTORE_TOKEN,\n        payload: {\n            accessToken: (accessToken !== null ? accessToken : null),\n            refreshToken: (refreshToken !== null ? refreshToken : null)\n        }\n    }\n}","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nclass NavBarLink extends React.Component {\n\n\n    render() {\n        return (\n            <NavLink\n                exact={this.props.exact}\n                className={\"nav__link\"}\n                activeClassName={\"nav__link__active\"}\n                to={this.props.link}\n            >\n                {this.props.name}\n            </NavLink>\n        );\n    }\n}\n\n\nexport default NavBarLink;","import React from 'react';\nimport NavBarLink from \"./NavBarLink\";\n\nclass NavBar extends React.Component{\n\n    render() {\n        return(\n            <nav className={'nav-bar'}>\n                <div className={'nav-bar__container'}>\n                <NavBarLink exact={true} link={\"/\"} name={\"Home page\"}/>\n                <NavBarLink link={\"/login\"} name={\"Login\"}/>\n                <NavBarLink link={\"/authenticated\"} name={\"Authenticated\"}/>\n                <NavBarLink link={\"/users\"} name={\"User list\"}/>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default NavBar;","import React from 'react';\n\nclass Header extends React.Component{\n    render() {\n        return(\n            <div className={'header'}>\n                <img src=\"/react-gif.gif\" alt=\"\"/>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component{\n    render() {\n        return(\n            <footer className={'footer'}>\n                <div className=\"footer--logo\">\n                    <img src=\"/logo192.png\" alt=\"\"/>\n                </div>\n                <div className=\"footer--content\">\n                    <p>&#169; design by Infernet</p>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport InputLogin from \"../views/components/Authenticated/InputLogin\";\nimport InputPassword from \"../views/components/Authenticated/InputPassword\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {changeLogin, changePassword, signIn} from \"../actions/authorizationActions\";\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport Header from \"../views/components/Header/Header\";\nimport Footer from \"../views/components/Footer/Footer\";\n\nclass Authorization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.signIn({\n            login: this.props.login,\n            password: this.props.password\n        });\n\n    }\n\n    render() {\n        const {setLogin, setPassword, login, password, isFetching, message} = this.props;\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                <div className=\"authorization-body\">\n                    <div className=\"authorization__title\">\n                        <h3>Login Page</h3>\n                    </div>\n                    <div className=\"authorization__content\">\n                        <form className={'authorization__content--form'} onSubmit={this.handleSubmit}>\n\n                            <InputLogin login={login} setValue={setLogin} class={'Login'}/>\n                            <InputPassword password={password} class={'Password'} setValue={setPassword}/>\n                            <button type=\"submit\">sign in</button>\n                        </form>\n                        <div className=\"authorization__content--status\">\n                            <p>Login: {login}</p>\n                            <p>Password: {password}</p>\n                            {\n                                (isFetching) ? <p>Отправка на Node.js...</p> :\n                                    <p>{message}</p>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\n\nAuthorization.propsTypes = {\n    isFetching: PropTypes.bool.isRequired,\n    message: PropTypes.string,\n    login: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    setLogin: PropTypes.func.isRequired,\n    setPassword: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = store => {\n    console.log(store);\n    return {\n        login: store.authorization.login,\n        password: store.authorization.password,\n        isFetching: store.authorization.isFetching,\n        message: store.authorization.message\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLogin: login => dispatch(changeLogin(login)),\n        setPassword: password => dispatch(changePassword(password)),\n        signIn: data => dispatch(signIn(data))\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorization);\n","import React from 'react';\n\nclass ContentCart extends React.Component {\n\n\n    render() {\n        return (\n            <div className={this.props.class.container}>\n                <p className={this.props.class.title}>{this.props.title}</p>\n                <p className={this.props.class.content}>{this.props.content}</p>\n            </div>\n        );\n    }\n}\n\nexport default ContentCart;","import React from 'react';\nimport {connect} from 'react-redux';\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport ContentCart from \"../views/components/Home/ContentCart\";\nimport Footer from \"../views/components/Footer/Footer\";\nimport Header from \"../views/components/Header/Header\";\n\n\nclass Home extends React.Component {\n    render() {\n        const {store} = this.props;\n        let classNames = {\n            container: \"home__content--container\",\n            title: \"home__content--title\",\n            content: \"home__content--content\"\n        };\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                <div className={'home-body'}>\n                    <div className={'home__title'}>\n                        <h3>Home page</h3>\n                    </div>\n                    <div className={'home__content'}>\n                        {\n                            (store.authorization.token !== null) ?\n                                Object.keys(store.authorization).map(e => {\n                                    if (e !== 'token' && store.authorization[e]!=='')\n                                        return <ContentCart\n                                            key={e}\n                                            class={classNames}\n                                            title={e + ':'}\n                                            content={store.authorization[e]}\n                                        />;\n                                })\n                                :\n                                <ContentCart\n                                    class={classNames}\n                                    title={'Ошибка:'}\n                                    content={'Вы не авторизованы'}\n                                />\n                        }\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        store: store\n    }\n};\nexport default connect(mapStateToProps)(Home);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {signOut} from \"../actions/authorizationActions\";\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport Header from \"../views/components/Header/Header\";\nimport Footer from \"../views/components/Footer/Footer\";\n\n\nclass Authenticated extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.check=this.check.bind(this);\n        this.interval=setInterval(this.check,1000);\n    }\n\n    check(){\n        let time=new Date().getTime()/1000;\n        let tokenTime=this.props.store.authorization.accessExpiresIn;\n        if(time>tokenTime)\n        {\n            alert('Token was broken');\n            alert(`Now time: ${new Date(time).toLocaleTimeString()}\\nToken time: ${new Date(tokenTime).toLocaleTimeString()}`);\n            clearInterval(this.interval);\n        }\n    }\n\n\n\n    render() {\n        const {store} = this.props;\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                <div className=\"authenticated-body\">\n                    <div className=\"authenticated--title\">\n                        <h3>Authenticated page</h3>\n                    </div>\n                    <ul className={\"authenticated--content\"}>\n                        {\n                            Object.keys(store.authorization).map(e => {\n                                if (e !== 'token')\n                                    return <li key={e}>{e}: {store.authorization[e]}</li>;\n                                else\n                                    return false;\n                            })\n                        }\n                    </ul>\n                    <button className={\"authenticated--button\"} onClick={this.props.signOut}>Log out</button>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = store => {\n    return {\n        store: store\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authenticated);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {signInWithToken} from \"../../../actions/authorizationActions\";\nimport {connect} from \"react-redux\";\n\n\nclass ControlPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onInsertUser = this.onInsertUser.bind(this);\n        this.onUpdateUser = this.onUpdateUser.bind(this);\n        this.onDeleteUser = this.onDeleteUser.bind(this);\n    }\n\n    onInsertUser(e) {\n\n    }\n\n    onUpdateUser(e) {\n\n    }\n\n    onDeleteUser(e) {\n\n    }\n\n    render() {\n        return (\n            <div className=\"users__control-panel--container\">\n                <button className=\"users__control-panel--btn\" onClick={this.onInsertUser}>Добавить</button>\n                <button className=\"users__control-panel--btn\" onClick={this.onUpdateUser}>Изменить</button>\n                <button className=\"users__control-panel--btn\" onClick={this.onDeleteUser}>Удалить</button>\n            </div>\n        );\n    }\n}\n\nControlPanel.propsTypes = {\n    user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = store => {\n    return {\n        store: store\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        insertUser:token=>dispatch(signInWithToken(token))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlPanel);","export const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILED = \"GET_USERS_FAILED\";\nexport const CHANGE_USER = \"CHANGE_USER\";\nexport const INSERT_USER_REQUEST = \"INSERT_USER_REQUEST\";\nexport const INSERT_USER_SUCCESS = \"INSERT_USER_SUCCESS\";\nexport const INSERT_USER_FAILED = \"INSERT_USER_FAILED\";\nexport const UPDATE_USER_REQUEST = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILED = \"UPDATE_USER_FAILED\";\nexport const DELETE_USER_REQUEST = \"DELETE_USER_REQUEST\";\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\nexport const DELETE_USER_FAILED = \"DELETE_USER_FAILED\";","import {\n    CHANGE_LOGIN,\n    CHANGE_PASSWORD,\n    SIGN_IN_FAILED,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_OUT,\n} from \"../constants/authorization\";\nimport {\n    AUTH_WITH_TOKEN_FAILED,\n    AUTH_WITH_TOKEN_REQUEST,\n    AUTH_WITH_TOKEN_SUCCESS,\n    REFRESH_TOKEN_FAILED,\n    REFRESH_TOKEN_REQUEST,\n    REFRESH_TOKEN_SUCCESS, RESTORE_TOKEN\n} from \"../constants/token\";\n\nconst initialState = {\n    id: null,\n    login: \"\",\n    password: \"\",\n    isFetching: false,\n    message: \"\",\n    accessToken: null,\n    refreshToken: null,\n    accessExpiresIn: 0\n};\n\nexport function authorizationReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_LOGIN:\n            return Object.assign({}, state, {login: action.payload});\n        case CHANGE_PASSWORD:\n            return Object.assign({}, state, {password: action.payload});\n        case SIGN_IN_REQUEST:\n            return Object.assign({}, state, {isFetching: true});\n        case SIGN_IN_SUCCESS:\n            return Object.assign({}, state, action.payload, {password: \"\", isFetching: false});\n        case SIGN_IN_FAILED:\n            return Object.assign({}, state, action.payload, {isFetching: false});\n        case SIGN_OUT:\n            return Object.assign({}, initialState);\n        case RESTORE_TOKEN:\n            return Object.assign({}, state, action.payload);\n        case AUTH_WITH_TOKEN_REQUEST:\n            return Object.assign({}, state);\n        case AUTH_WITH_TOKEN_SUCCESS:\n            return Object.assign({}, state, action.payload);\n        case AUTH_WITH_TOKEN_FAILED:\n            return Object.assign({}, state, action.payload);\n        case REFRESH_TOKEN_REQUEST:\n            return Object.assign({}, state);\n        case REFRESH_TOKEN_SUCCESS:\n            return Object.assign({}, state, action.payload);\n        case REFRESH_TOKEN_FAILED:\n            return initialState;\n        default:\n            return state;\n    }\n}","import {\n    CHANGE_USER,\n    DELETE_USER_FAILED,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    GET_USERS_FAILED,\n    GET_USERS_REQUEST,\n    GET_USERS_SUCCESS,\n    INSERT_USER_FAILED,\n    INSERT_USER_REQUEST,\n    INSERT_USER_SUCCESS,\n    UPDATE_USER_FAILED,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS\n} from \"../constants/users\";\n\nconst initialState = {\n    selectedId: null,\n    users: [],\n    isFetching: false,\n    message: \"\"\n};\n\nexport function usersReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_USER:\n            return Object.assign({}, state, {selectedId: action.payload});\n        case GET_USERS_REQUEST:\n            return Object.assign({}, state, {isFetching: true, message: \"Запрос на получение данных\"});\n        case INSERT_USER_REQUEST:\n            return Object.assign({}, state, {isFetching: true, message: \"Запрос на добавление\"});\n        case UPDATE_USER_REQUEST:\n            return Object.assign({}, state, {isFetching: true, message: \"Запрос на изменение\"});\n        case DELETE_USER_REQUEST:\n            return Object.assign({}, state, {isFetching: true, message: \"Запрос на удаление\"});\n        case GET_USERS_SUCCESS:\n            return Object.assign({}, state, {users: action.payload});\n        case INSERT_USER_SUCCESS:\n            return Object.assign({}, state, {\n                users: action.payload,\n                isFetching: true,\n                message: \"Успешное добавление\"\n            });\n        case UPDATE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                users: action.payload,\n                isFetching: true,\n                message: \"Успешное изменение\"\n            });\n        case DELETE_USER_SUCCESS:\n            return Object.assign({}, state, {\n                users: action.payload,\n                isFetching: true,\n                message: \"Успешное удаление\"\n            });\n        case INSERT_USER_FAILED:\n        case UPDATE_USER_FAILED:\n        case DELETE_USER_FAILED:\n        case GET_USERS_FAILED:\n            return Object.assign({}, state, {\n                isFetching: true,\n                message: action.message,\n                users:[]\n            });\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {authorizationReducer} from \"./authorizationReducer\";\nimport {usersReducer} from \"./usersReducer\";\n\n\n\n\nexport const rootReducer = combineReducers({\n    authorization: authorizationReducer,\n    users:usersReducer,\n});\n","import {createStore, applyMiddleware} from 'redux'\nimport {rootReducer} from \"../reducers/rootReducer\";\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {helloMiddleware} from \"../middlewares/accessTokenMiddleware\";\n\n\n\n\n\n\n\nexport const store = createStore(rootReducer, applyMiddleware(helloMiddleware,thunk ,logger));\n\n\n\n\n","import {GET_USERS_REQUEST} from \"../constants/users\";\nimport {refreshAccessToken} from \"../actions/authorizationActions\";\n\nexport const helloMiddleware = store => next => action => {\n    if (action.type === GET_USERS_REQUEST) {\n        alert(GET_USERS_REQUEST);\n        let user = store.getState().authorization;\n        let time = Math.floor(new Date().getTime() / 1000);\n        if (user.accessExpiresIn <= time) {\n            store.dispatch(refreshAccessToken(user.refreshToken, next, action));\n            next(action);\n        }\n        else {\n            console.log('токен еще валидный');\n            next(action);\n        }\n    } else {\n        console.log('Не тот action');\n        next(action);\n    }\n};","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\n\nclass User extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onSelect=this.onSelect.bind(this);\n    }\n\n    onSelect(e){\n        e.preventDefault();\n        this.props.select(this.props.user.id);\n    }\n\n\n    render() {\n        const user = this.props.user;\n        return (\n            <Link to={''} onClick={this.onSelect} className=\"users__list--item-container\">\n                {\n                    Object.keys(user).map(e => {\n                        return <p className=\"users__list--item-content\" key={e}>{user[e]}</p>\n                    })\n                }\n            </Link>\n        );\n    }\n}\n\nUser.propsTypes = {\n    user: PropTypes.object.isRequired,\n    select: PropTypes.func.isRequired\n};\n\n\nexport default User;","import React from 'react';\nimport {connect} from 'react-redux';\nimport NavBar from \"../views/components/NavBar/NavBar\";\nimport Header from \"../views/components/Header/Header\";\nimport Footer from \"../views/components/Footer/Footer\";\nimport ControlPanel from \"../views/components/Users/ControlPanel\";\nimport PropTypes from 'prop-types';\nimport {changeUser, getUsers} from \"../actions/usersActions\";\nimport User from \"../views/components/Users/User\";\n\n\nclass UsersList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.getUsers(this.props.user.accessToken);\n    }\n\n    render() {\n        const {users} = this.props.users;\n        return (\n            <div>\n                <Header/>\n                <NavBar/>\n                {\n                    (users.length > 0) ?\n                        <div className=\"users-body\">\n                            <ControlPanel user={users[0]}/>\n                            <div className=\"users__list-header\">\n                                {\n                                    Object.keys(users[0]).map(e => {\n                                        return <p className=\"users__list-header--title\" key={e}>{e}</p>\n                                    })\n                                }\n                            </div>\n                            {\n                                users.map(e => {\n                                    return <User user={e} key={e.id} select={this.props.selectUser}/>\n                                })\n                            }\n                        </div> :\n                        <div style={{height: '100%', width: '100%'}}>false</div>\n                }\n\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nUsersList.propTypes = {\n    user: PropTypes.object.isRequired,\n    users: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = store => {\n    return {\n        user: store.authorization,\n        users: store.users\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUsers: (accessToken) => dispatch(getUsers(accessToken)),\n        selectUser: id => dispatch(changeUser(id)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);","import {\n    DELETE_USER_FAILED,\n    DELETE_USER_REQUEST, DELETE_USER_SUCCESS, INSERT_USER_FAILED,\n    INSERT_USER_REQUEST, INSERT_USER_SUCCESS,\n    GET_USERS_FAILED,\n    GET_USERS_REQUEST, GET_USERS_SUCCESS, UPDATE_USER_FAILED,\n    UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, CHANGE_USER\n} from \"../constants/users\";\nimport axios from \"axios\";\nimport {store} from \"../store/configureStore\";\n\nexport function getUsers(accessToken) {\n    return dispatch => {\n        dispatch({\n            type: GET_USERS_REQUEST\n        });\n        // setTimeout(()=>{\n        //     dispatch({\n        //         type:GET_USERS_SUCCESS,\n        //         payload:[\n        //             {\n        //             id:1,\n        //                 login:\"userlogin\",\n        //                 password:\"password\",\n        //                 firstName:\"name\",\n        //                 lastName:\"lastname\",\n        //                 email:\"email\"\n        //         },{\n        //                 id:2,\n        //                 login:\"userlogin\",\n        //                 password:\"password\",\n        //                 firstName:\"name\",\n        //                 lastName:\"lastname\",\n        //                 email:\"email\"\n        //             },{\n        //                 id:3,\n        //                 login:\"userlogin\",\n        //                 password:\"password\",\n        //                 firstName:\"name\",\n        //                 lastName:\"lastname\",\n        //                 email:\"email\"\n        //             }\n        //         ]\n        //     })\n        // },5000);\n\n        axios.post('/request/user/get', {token: accessToken})\n            .then(response => {\n                if (response.data.users)\n                    dispatch({\n                        type: GET_USERS_SUCCESS,\n                        payload: response.data.users\n                    });\n                else\n                    throw new Error('Empty result');\n            })\n            .catch(reason => {\n                if(reason.response && reason.response.status ===401) {\n                    dispatch(getUsers(store.getState().authorization.accessToken));\n                }\n                else\n                    dispatch(\n                    {\n                        type: GET_USERS_FAILED,\n                        payload: reason\n                    }\n                )\n            });\n    }\n}\n\nexport function changeUser(id) {\n    return ({\n        type: CHANGE_USER,\n        payload: id\n    });\n}\n\nexport function insertUser(data) {\n    return dispatch => {\n        dispatch({\n            type: INSERT_USER_REQUEST\n        });\n\n\n        axios.post('/request/users/insert', {user: data.user, token: data.token})\n            .then(response => {\n                if (response.data.users)\n                    dispatch({\n                        type: INSERT_USER_SUCCESS,\n                        payload: response.data.users\n                    });\n                else\n                    throw new Error('Failed insert');\n            })\n            .catch(reason => {\n                dispatch({\n                    type: INSERT_USER_FAILED,\n                    payload: reason\n                })\n            });\n    }\n}\n\nexport function updateUser(data) {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        });\n\n        axios.put('/request/users/update', {userId: data.id, token: data.token})\n            .then(response => {\n                if (response.data.users)\n                    dispatch({\n                        type: UPDATE_USER_SUCCESS,\n                        payload: response.data.users\n                    });\n                else\n                    throw new Error('Failed update');\n            })\n            .catch(reason => {\n                dispatch({\n                    type: UPDATE_USER_FAILED,\n                    payload: reason\n                })\n            });\n    }\n}\n\nexport function deleteUser(data) {\n    return dispatch => {\n        dispatch({\n            type: DELETE_USER_REQUEST,\n            payload: data.id\n        });\n\n\n        axios.post('/request/users/delete', {userId: data.id, token: data.token})\n            .then(response => {\n                if (response.data.users)\n                    dispatch({\n                        type: DELETE_USER_SUCCESS,\n                        payload: response.data.users\n                    });\n                else\n                    throw new Error('Failed delete');\n            })\n            .catch(reason => {\n                dispatch({\n                    type: DELETE_USER_FAILED,\n                    payload: reason\n                })\n            });\n    }\n}","import {Redirect, Route, Switch} from 'react-router-dom';\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport Authorization from \"../containers/Authorization\";\nimport Home from \"../containers/Home\";\nimport Authenticated from \"../containers/Authenticated\";\nimport PropTypes from 'prop-types';\nimport UserList from \"../containers/UsersList\";\n\n\n\nclass Routes extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path={\"/\"} exact component={Home}/>\n                {\n                    (this.props.store.accessToken!==null)?\n                    <Redirect from={\"/login\"} to={\"/authenticated\"}/>:\n                    <Redirect from={\"/authenticated\"} to={\"/login\"}/>\n                }\n                <Route path={\"/login\"} component={Authorization}/>\n                <Route path={\"/authenticated\"} component={Authenticated}/>\n                <Route path={\"/users\"} component={UserList}/>\n            </Switch>\n        );\n    }\n}\nRoutes.propTypes={\n    store:PropTypes.object.isRequired\n};\n\nconst mapStateToProps = store => {\n    return {\n        store: store.authorization\n    }\n};\n\nexport default connect(mapStateToProps)(Routes);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Routes from \"../routes\";\nimport PropTypes from \"prop-types\";\nimport {restoreToken, signInWithToken} from \"../actions/authorizationActions\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        const {authorization}=this.props;\n        if(authorization.accessToken===null && authorization.refreshToken==null && !authorization.accessExpiresIn) {\n            if(authorization.accessToken!==null && authorization.login===\"\" && authorization.id===null)\n                this.props.bearerToken(authorization.accessToken);\n        }\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Routes/>\n            </BrowserRouter>\n        );\n    }\n}\n\nApp.propsTypes = {\n    authorization: PropTypes.object.isRequired\n};\nconst mapStateToProps = store => {\n    return {\n        authorization:store.authorization\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        bearerToken:token=>dispatch(signInWithToken(token)),\n        restoreToken:()=>dispatch(restoreToken())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./containers/App\";\nimport {store} from \"./store/configureStore\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}